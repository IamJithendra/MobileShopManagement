/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mobileshopmanagement;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author ct
 */
public class UpdateDelete extends javax.swing.JFrame {

    /**
     * Creates new form UpdateDelete
     */
    public UpdateDelete() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tvModelNumber = new javax.swing.JLabel();
        modelNo = new javax.swing.JTextField();
        modelName = new javax.swing.JTextField();
        tvModelName = new javax.swing.JLabel();
        tvBrand = new javax.swing.JLabel();
        brand = new javax.swing.JTextField();
        tvYear = new javax.swing.JLabel();
        year = new javax.swing.JTextField();
        tvOs = new javax.swing.JLabel();
        os = new javax.swing.JTextField();
        tvCam = new javax.swing.JLabel();
        camera = new javax.swing.JTextField();
        tvBattery = new javax.swing.JLabel();
        battery = new javax.swing.JTextField();
        tvVarient = new javax.swing.JLabel();
        varient = new javax.swing.JTextField();
        tvProcessor = new javax.swing.JLabel();
        processor = new javax.swing.JTextField();
        tvPrice = new javax.swing.JLabel();
        price = new javax.swing.JTextField();
        availability = new javax.swing.JTextField();
        tvAvailability = new javax.swing.JLabel();
        update = new javax.swing.JButton();
        search = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        tvUpdateDelete = new javax.swing.JLabel();
        close = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(29, 45, 113));

        tvModelNumber.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        tvModelNumber.setForeground(new java.awt.Color(254, 254, 254));
        tvModelNumber.setText("Model Number");

        modelNo.setFont(new java.awt.Font("DejaVu Sans", 2, 18)); // NOI18N

        modelName.setFont(new java.awt.Font("DejaVu Sans", 2, 18)); // NOI18N

        tvModelName.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        tvModelName.setForeground(new java.awt.Color(254, 254, 254));
        tvModelName.setText("Model Name");

        tvBrand.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        tvBrand.setForeground(new java.awt.Color(254, 254, 254));
        tvBrand.setText("Brand");

        brand.setFont(new java.awt.Font("DejaVu Sans", 2, 18)); // NOI18N

        tvYear.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        tvYear.setForeground(new java.awt.Color(254, 254, 254));
        tvYear.setText("Year of Release");

        year.setFont(new java.awt.Font("DejaVu Sans", 2, 18)); // NOI18N

        tvOs.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        tvOs.setForeground(new java.awt.Color(254, 254, 254));
        tvOs.setText("Operating System");

        os.setFont(new java.awt.Font("DejaVu Sans", 2, 18)); // NOI18N

        tvCam.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        tvCam.setForeground(new java.awt.Color(254, 254, 254));
        tvCam.setText("Camera");

        camera.setFont(new java.awt.Font("DejaVu Sans", 2, 18)); // NOI18N

        tvBattery.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        tvBattery.setForeground(new java.awt.Color(254, 254, 254));
        tvBattery.setText("Battery Capacity");

        battery.setFont(new java.awt.Font("DejaVu Sans", 2, 18)); // NOI18N

        tvVarient.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        tvVarient.setForeground(new java.awt.Color(254, 254, 254));
        tvVarient.setText("Varients");

        varient.setFont(new java.awt.Font("DejaVu Sans", 2, 18)); // NOI18N

        tvProcessor.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        tvProcessor.setForeground(new java.awt.Color(254, 254, 254));
        tvProcessor.setText("Processor");

        processor.setFont(new java.awt.Font("DejaVu Sans", 2, 18)); // NOI18N

        tvPrice.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        tvPrice.setForeground(new java.awt.Color(254, 254, 254));
        tvPrice.setText("Price :");

        price.setFont(new java.awt.Font("DejaVu Sans", 2, 18)); // NOI18N

        availability.setFont(new java.awt.Font("DejaVu Sans", 2, 18)); // NOI18N

        tvAvailability.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        tvAvailability.setForeground(new java.awt.Color(254, 254, 254));
        tvAvailability.setText("Availability :");

        update.setBackground(new java.awt.Color(80, 240, 22));
        update.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        update.setText("UPDATE");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        search.setBackground(new java.awt.Color(34, 200, 216));
        search.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        search.setText("SEARCH");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(255, 0, 78));
        delete.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tvAvailability)
                        .addGap(58, 58, 58)
                        .addComponent(availability, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(search)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tvBrand)
                            .addComponent(tvYear)
                            .addComponent(tvOs)
                            .addComponent(tvCam)
                            .addComponent(tvVarient)
                            .addComponent(tvProcessor)
                            .addComponent(tvModelNumber)
                            .addComponent(tvModelName)
                            .addComponent(tvBattery)
                            .addComponent(tvPrice))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(modelName, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(os, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(processor, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(varient)
                                    .addComponent(battery)
                                    .addComponent(modelNo, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(camera)
                                    .addComponent(year, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(brand, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)))
                .addGap(64, 64, 64))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modelNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tvModelNumber))
                .addGap(18, 18, 18)
                .addComponent(search)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modelName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tvModelName))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(brand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tvBrand))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tvYear)
                    .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(os, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tvOs))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tvCam)
                    .addComponent(camera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(battery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tvBattery))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(varient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tvVarient))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(processor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tvProcessor))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tvPrice))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(availability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tvAvailability))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(update)
                    .addComponent(delete))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 0));

        tvUpdateDelete.setFont(new java.awt.Font("Futura Bk BT", 1, 24)); // NOI18N
        tvUpdateDelete.setForeground(new java.awt.Color(0, 0, 0));
        tvUpdateDelete.setText("UPDATE / DELETE");

        close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/img_delete.png"))); // NOI18N

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ic_back.png"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(97, 97, 97)
                .addComponent(tvUpdateDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(close)
                .addGap(14, 14, 14))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(tvUpdateDelete))
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(close)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
         try {
            String model=modelNo.getText();
            if (model.equals("")){
                 JOptionPane.showMessageDialog(rootPane, "Enter Something to Search");
             } else {
            Connection myConnection=database.connection.getConnection();
            String ss="select * from mobiles where Model_no = '"+model+"'";
            Statement st = myConnection.createStatement();
            ResultSet executeQuery = st.executeQuery(ss);
            if (executeQuery.next()) {
                modelName.setText(executeQuery.getString("Model_Name"));
                brand.setText(executeQuery.getString("Brand"));
                year.setText(executeQuery.getString("Year_of_Release"));
                os.setText(executeQuery.getString("Operating_System"));
                camera.setText(executeQuery.getString("Camera"));
                battery.setText(executeQuery.getString("Battery_Capacity"));
                varient.setText(executeQuery.getString("Varients"));
                processor.setText(executeQuery.getString("Processor"));
                price.setText(executeQuery.getString("Price"));
                availability.setText(executeQuery.getString("Availability"));
            } else {
                JOptionPane.showMessageDialog(rootPane, "Please recheck. Cannot Found");
            }
            }
        } catch (SQLException | HeadlessException e) {
        }
    }//GEN-LAST:event_searchActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        try {
            String model_no=modelNo.getText();
            String model_name=modelName.getText();
            String brandname=brand.getText();
            String year_release=year.getText();
            String operatingsystem=os.getText();
            String cam=camera.getText();
            String batt=battery.getText();
            String varints=varient.getText();
            String prossor=processor.getText();
            String cost=price.getText();
            String avail=availability.getText();
            
            Connection myConnection=database.connection.getConnection();
            String s="update mobiles set Availability ='"+avail+"',Price='"+cost+"' where Model_no ='"+model_no+"'";
            Statement st = myConnection.createStatement();
            int executeUpdate = st.executeUpdate(s);
            if (executeUpdate>0) {
                JOptionPane.showMessageDialog(rootPane, "Updated Successfully");
                modelNo.setText("");
                modelName.setText("");
                brand.setText("");
                year.setText("");
                os.setText("");
                camera.setText("");
                battery.setText("");
                varient.setText("");
                processor.setText("");
                price.setText("");
                availability.setText("");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Update Failed");
            }
        
        } catch (SQLException | HeadlessException e) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        try {
            String model_no=modelNo.getText();
 
            Connection myConnection=database.connection.getConnection();
            String s="delete from mobiles where Model_no ='"+model_no+"'";
            Statement st = myConnection.createStatement();
            int executeUpdate = st.executeUpdate(s);
            if (executeUpdate>0) {
                JOptionPane.showMessageDialog(rootPane, "Deleted Successfully");
                modelNo.setText("");
                modelName.setText("");
                brand.setText("");
                year.setText("");
                os.setText("");
                camera.setText("");
                battery.setText("");
                varient.setText("");
                processor.setText("");
                price.setText("");
                availability.setText("");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Delete Failed");
            }
        
        } catch (SQLException | HeadlessException e) {
        }
        // TODO add your handling code here:

    }//GEN-LAST:event_deleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateDelete().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField availability;
    private javax.swing.JTextField battery;
    private javax.swing.JTextField brand;
    private javax.swing.JTextField camera;
    private javax.swing.JLabel close;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField modelName;
    private javax.swing.JTextField modelNo;
    private javax.swing.JTextField os;
    private javax.swing.JTextField price;
    private javax.swing.JTextField processor;
    private javax.swing.JButton search;
    private javax.swing.JLabel tvAvailability;
    private javax.swing.JLabel tvBattery;
    private javax.swing.JLabel tvBrand;
    private javax.swing.JLabel tvCam;
    private javax.swing.JLabel tvModelName;
    private javax.swing.JLabel tvModelNumber;
    private javax.swing.JLabel tvOs;
    private javax.swing.JLabel tvPrice;
    private javax.swing.JLabel tvProcessor;
    private javax.swing.JLabel tvUpdateDelete;
    private javax.swing.JLabel tvVarient;
    private javax.swing.JLabel tvYear;
    private javax.swing.JButton update;
    private javax.swing.JTextField varient;
    private javax.swing.JTextField year;
    // End of variables declaration//GEN-END:variables
}
